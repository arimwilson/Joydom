{"version":3,"sources":["App.js","firebaseConfig.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","gameId","database","functions","window","location","hostname","startsWith","host","useFunctionsEmulator","useEmulator","App","props","state","game","min","max","startGame","httpsCallable","defaultGameId","Math","floor","random","prompt","numPlayers","parseInt","then","response","startRound","ref","on","snapshot","setState","val","errorObject","console","log","catch","error","alert","code","message","className","this","currentDouble","unusedDoubles","turn","players","currentPlayer","React","Component","GameInfo","Playfield","map","player","line","tile","end1","end2","isCurrentPlayer","name","score","penny","walking","style","whiteSpace","actions","Hand","handleClick","e","text","target","textContent","takeAction","request","action","Number","tilesPlayed","i","hand","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.880240a8.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/functions';\n\nimport { firebaseConfig } from './firebaseConfig'\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n} else {\n  firebase.app();\n}\n\nconst database = firebase.database();\nconst functions = firebase.functions();\nif (window.location.hostname === \"localhost\" ||\n    window.location.hostname.startsWith(\"192.168.0\")) {\n  const host = window.location.hostname;\n  functions.useFunctionsEmulator(`http://${host}:5001`);\n  database.useEmulator(`${host}`, 9000);\n}\n\nvar gameId;\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { game: null, }\n  }\n\n  componentDidMount() {\n    var startGame = functions.httpsCallable('startGame');\n    let defaultGameId = getRandomInt(0, 1000);\n    gameId = prompt('Game id? ', defaultGameId);\n    if (gameId === null) {\n      gameId = defaultGameId;\n    }\n    let defaultNumPlayers = \"4\";\n    let numPlayers = prompt('Number of players? ', defaultNumPlayers);\n    if (numPlayers === null) {\n      numPlayers = defaultNumPlayers;\n    }\n    startGame({\n      gameId: gameId,\n      numPlayers: parseInt(numPlayers),\n    }).then((response) => {\n\t\t\tvar startRound = functions.httpsCallable('startRound');\n\t\t\tstartRound({ gameId: gameId }).then((response) => {\n\t\t\t\tdatabase.ref(`game/${gameId}`).on('value', (snapshot) => {\n\t\t\t\t\tthis.setState({game: snapshot.val(), });\n\t\t\t\t}, (errorObject) => {\n\t\t\t\t\tconsole.log(errorObject);\n\t\t\t\t});\n\t\t\t}).catch((error) => {\n\t\t\t\talert(`Code: ${error.code}. Message: ${error.message}`);\n\t\t\t});\n    }).catch((error) => {\n      alert(`Code: ${error.code}. Message: ${error.message}`);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h2>Joyce Dominoes Game {gameId}</h2>\n        </header>\n        {this.state.game !== null &&\n          <div>\n            <section className=\"GameInfo\">\n              <GameInfo\n                  currentDouble={this.state.game.currentDouble}\n                  unusedDoubles={this.state.game.unusedDoubles}\n                  turn={this.state.game.turn}/>\n            </section>\n            <section className=\"Playfield\">\n              <Playfield\n                  players={this.state.game.players}\n                  currentPlayer={this.state.game.currentPlayer}/>\n            </section>\n            <section className=\"Hand\">\n              <Hand\n                  currentPlayer={this.state.game.currentPlayer}\n                  players={this.state.game.players}/>\n            </section>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nclass GameInfo extends React.Component {\n  render() {\n    return (\n        <p>\n          <b>Round</b>:\n          Double: {this.props.currentDouble}, Turn: {this.props.turn},\n          Unused: {this.props.unusedDoubles}\n        </p>);\n  }\n}\n\nfunction getPlayerRowFun(currentPlayer) {\n  return function(player) {\n    let line = (\"line\" in player? player.line.map(function(tile) {\n      if (tile !== null) {\n        return (<span>{tile.end1}{tile.end2} </span>);\n      } else {\n        return;\n      }\n    }): <div>empty</div>);\n    const isCurrentPlayer = player.name === currentPlayer;\n    return (\n      <tr>\n        <td>{isCurrentPlayer? <u>{player.name}</u> : player.name}</td>\n        <td>{player.score}</td>\n        <td>{player.penny? 'yes': 'no'}</td>\n        <td>{(\"walking\" in player)? player.walking: 'no'}</td>\n        <td>{line}</td>\n      </tr>);\n  }\n}\n\nclass Playfield extends React.Component {\n  render() {\n    let players = this.props.players.map(getPlayerRowFun(this.props.currentPlayer));\n    return (\n        <p>\n          <b>Lines:</b>\n          <table>\n            <tr>\n              <th>Name</th>\n              <th>Score</th>\n              <th>Penny?</th>\n              <th>Walking?</th>\n              <th style={{whiteSpace: 'nowrap'}}>Line</th>\n            </tr>\n            {players}\n          </table>\n        </p>);\n  }\n}\n\nconst actions = {\n  NONE: 0,\n  PLAY: 1,\n  DRAW: 2,\n  PASS: 3,\n  WALKING: 4,\n}\n\nclass Hand extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { tilesPlayed: [],  walking: false };\n  }\n\n  handleClick = (e) => {\n    const text = e.target.textContent;\n    var takeAction = functions.httpsCallable('takeAction');\n    var request = {gameId: gameId, action: actions.PLAY};\n    if (text === \"Draw\") {\n      request.action = actions.DRAW;\n    } else if (text === \"Pass\") {\n      request.action = actions.PASS;\n    } else if (text === \"Pass/end turn\") {\n      request.action = actions.PASS;\n    } else if (text === \"Walking\") {\n      request.action = actions.WALKING;\n    } else {\n      request.tile = Number(text);\n      request.line = prompt(`Which line (1-${this.props.players.length})?`);\n      if (request.line === null) {\n        return;\n      }\n    }\n    takeAction(request).then((response) => {\n    }).catch((error) => {\n      alert(`Code: ${error.code}. Message: ${error.message}`);\n    });\n  }\n\n  render() {\n    for (let i = 0; i < this.props.players.length; i++) {\n      if (this.props.players[i].name === this.props.currentPlayer) {\n        let handleClick = this.handleClick;\n        let hand = \"empty\";\n        if (\"hand\" in this.props.players[i]) {\n          hand = this.props.players[i].hand.map(function(tile) {\n            return (\n                <td>\n                  <button onClick={handleClick}>{tile.end1}{tile.end2}\n                  </button>\n                </td>);\n          });\n        }\n        return (\n            <p>\n              <b>{this.props.currentPlayer}'s hand:</b>\n              <table><tr>{hand}</tr></table>\n              <table>\n                <tr>\n                  <td><button onClick={this.handleClick}>Draw</button></td>\n                  <td><button onClick={this.handleClick}>Pass/end turn</button></td>\n                  <td><button onClick={this.handleClick}>Walking</button></td>\n                </tr>\n              </table>\n            </p>);\n      }\n    }\n  }\n}\n\nexport default App;\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyBNt5XW7vVOK7-AVFtIA-jTX9LxE3S9QSs\",\n  authDomain: \"joydominoes.firebaseapp.com\",\n  databaseURL: \"https://joydominoes-default-rtdb.firebaseio.com\",\n  projectId: \"joydominoes\",\n  storageBucket: \"joydominoes.appspot.com\",\n  messagingSenderId: \"625206870515\",\n  appId: \"1:625206870515:web:372103b2c9fc38a0ca5286\",\n  measurementId: \"G-CQW9QZ18RV\"\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}